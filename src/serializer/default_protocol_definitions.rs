//! Constants, used in the protocol.

/// The serializer version, reader and writer must match the same version.
pub const FSM_SERIALIZER_VERSION: &str = "fsmW2.0";

pub const FSM_PROTOCOL_TYPE_PROTOCOL_VERSION: &str = "DwP1.1";
pub const FSM_PROTOCOL_TYPE_OPT_STRING_NONE: u8 = 0x10;
pub const FSM_PROTOCOL_TYPE_BOOLEAN_TRUE: u8 = 0x1F;
pub const FSM_PROTOCOL_TYPE_BOOLEAN_FALSE: u8 = 0x10;
pub const FSM_PROTOCOL_TYPE_INT_4BIT: u8 = 0x30;
pub const FSM_PROTOCOL_TYPE_INT_12BIT: u8 = 0x40;
pub const FSM_PROTOCOL_TYPE_INT_20BIT: u8 = 0x50;
pub const FSM_PROTOCOL_TYPE_INT_28BIT: u8 = 0x60;
pub const FSM_PROTOCOL_TYPE_INT_36BIT: u8 = 0x70;
pub const FSM_PROTOCOL_TYPE_INT_44BIT: u8 = 0x80;
pub const FSM_PROTOCOL_TYPE_INT_52BIT: u8 = 0x90;
pub const FSM_PROTOCOL_TYPE_INT_60BIT: u8 = 0xA0;
pub const FSM_PROTOCOL_TYPE_INT_68BIT: u8 = 0xB0;
pub const FSM_PROTOCOL_TYPE_STRING_LENGTH_4BIT: u8 = 0xC0;
pub const FSM_PROTOCOL_TYPE_STRING_LENGTH_12BIT: u8 = 0xD0;

pub const FSM_PROTOCOL_FLAG_HISTORY_TYPE_MASK: u16 = 0x03;
pub const FSM_PROTOCOL_FLAG_ON_ENTRY: u16 = 0x04;
pub const FSM_PROTOCOL_FLAG_ON_EXIT: u16 = 0x08;
pub const FSM_PROTOCOL_FLAG_STATES: u16 = 0x10;
pub const FSM_PROTOCOL_FLAG_IS_FINAL: u16 = 0x20;
pub const FSM_PROTOCOL_FLAG_IS_PARALLEL: u16 = 0x40;
pub const FSM_PROTOCOL_FLAG_DONE_DATA: u16 = 0x80;
pub const FSM_PROTOCOL_FLAG_INVOKE: u16 = 0x100;
pub const FSM_PROTOCOL_FLAG_DATA: u16 = 0x200;
pub const FSM_PROTOCOL_FLAG_HISTORY: u16 = 0x400;
pub const FSM_PROTOCOL_TYPE_OPT_DATA_VALUE_NONE: u8 = 0x0A;
